basePath: /api/v1
definitions:
  models.AdminLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a comprehensive e-commerce backend API server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Literally Backend API
  version: "1.0"
paths:
  /admin/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate admin and return JWT token
      parameters:
      - description: Admin login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.AdminLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            additionalProperties: true
            type: object
      summary: Admin login
      tags:
      - admin-auth
  /admin/profile:
    get:
      consumes:
      - application/json
      description: Get the authenticated admin's profile information
      produces:
      - application/json
      responses:
        "200":
          description: Profile retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Admin not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get admin profile
      tags:
      - admin-auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the JWT token for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Refresh JWT token
      tags:
      - authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - authentication
  /cart:
    delete:
      consumes:
      - application/json
      description: Remove all items from the authenticated user's cart
      produces:
      - application/json
      responses:
        "200":
          description: Cart cleared successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Clear user cart
      tags:
      - cart
    get:
      consumes:
      - application/json
      description: Get the authenticated user's shopping cart items
      produces:
      - application/json
      responses:
        "200":
          description: Cart retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get user cart
      tags:
      - cart
    post:
      consumes:
      - application/json
      description: Add a product to the authenticated user's shopping cart
      parameters:
      - description: Cart item data
        in: body
        name: item
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Item added to cart successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Add item to cart
      tags:
      - cart
  /cart/{id}:
    delete:
      consumes:
      - application/json
      description: Remove an item from the authenticated user's cart
      parameters:
      - description: Cart item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Item removed from cart successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid cart item ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Cart item not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Remove item from cart
      tags:
      - cart
    put:
      consumes:
      - application/json
      description: Update the quantity of an item in the authenticated user's cart
      parameters:
      - description: Cart item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated cart item data
        in: body
        name: item
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Cart item updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Cart item not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update cart item
      tags:
      - cart
  /categories:
    get:
      consumes:
      - application/json
      description: Get a list of all product categories
      produces:
      - application/json
      responses:
        "200":
          description: Categories retrieved successfully
          schema:
            additionalProperties: true
            type: object
      summary: Get all categories
      tags:
      - categories
  /categories/{id}/products:
    get:
      consumes:
      - application/json
      description: Get a list of products in a specific category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Products retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid category ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties: true
            type: object
      summary: Get products by category
      tags:
      - categories
  /orders:
    get:
      consumes:
      - application/json
      description: Get a list of orders for the authenticated user with pagination
        and optional status filtering
      parameters:
      - description: Filter by order status (PENDING, CONFIRMED, SHIPPED, DELIVERED,
          CANCELLED)
        in: query
        name: status
        type: string
      - description: 'Number of orders to return (default: 10)'
        in: query
        name: limit
        type: integer
      - description: 'Number of orders to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success response with orders and pagination
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get user orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order from cart items or specific items for the authenticated
        user
      parameters:
      - description: Order creation request (optional - if not provided, creates order
          from cart)
        in: body
        name: order
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Success response with created order
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Create new order
      tags:
      - orders
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: Get a specific order by ID for the authenticated user
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success response with order details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid order ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Order not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get order by ID
      tags:
      - orders
  /orders/{id}/status:
    put:
      consumes:
      - application/json
      description: Update the status of an order (admin only)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status update request
        in: body
        name: status
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update order status
      tags:
      - orders
  /orders/stats:
    get:
      consumes:
      - application/json
      description: Get order statistics for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Success response with order statistics
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get order statistics
      tags:
      - orders
  /products:
    get:
      consumes:
      - application/json
      description: Get a list of products with optional filtering by category, featured
        status, or search query
      parameters:
      - description: Filter by category ID
        in: query
        name: category_id
        type: string
      - description: Filter featured products (true/false)
        in: query
        name: featured
        type: string
      - description: Search products by name or description
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Products retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid category ID
          schema:
            additionalProperties: true
            type: object
      summary: Get products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product (admin only)
      parameters:
      - description: Product creation data
        in: body
        name: product
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Product created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific product by its ID (admin only)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid product ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Delete product by ID
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a specific product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid product ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties: true
            type: object
      summary: Get product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a specific product by its ID (admin only)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product data
        in: body
        name: product
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Product updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update product by ID
      tags:
      - products
  /products/featured:
    get:
      consumes:
      - application/json
      description: Get a list of featured products
      produces:
      - application/json
      responses:
        "200":
          description: Featured products retrieved successfully
          schema:
            additionalProperties: true
            type: object
      summary: Get featured products
      tags:
      - products
  /products/search:
    get:
      consumes:
      - application/json
      description: Search for products by name or description
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Search results retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Search query is required
          schema:
            additionalProperties: true
            type: object
      summary: Search products
      tags:
      - products
  /profile:
    get:
      consumes:
      - application/json
      description: Get the authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: Profile retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get user profile
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Update the authenticated user's profile information
      parameters:
      - description: Updated profile data
        in: body
        name: profile
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Profile updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update user profile
      tags:
      - profile
  /purchase-history:
    get:
      consumes:
      - application/json
      description: Get purchase history for the authenticated user with pagination
        and filtering
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        name: limit
        type: integer
      - description: Filter by order status
        in: query
        name: status
        type: string
      - description: Start date filter (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End date filter (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Purchase history retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get user purchase history
      tags:
      - purchase-history
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of all users (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Users retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user account (admin only)
      parameters:
      - description: User creation data
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific user by their ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Delete user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a specific user by their ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a specific user by their ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Update user by ID
      tags:
      - users
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
